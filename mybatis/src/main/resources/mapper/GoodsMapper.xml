<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.mybatis.mapper.GoodsMapper">
	
	<resultMap type="Goods" id="goodsResultMap">
		<id 	column="g_code" 		property="goodsCode" />
		<result column="g_name" 		property="goodsName" />
		<result column="g_price" 		property="goodsPrice" />
		<result column="g_seller_id" 	property="goodsSellerId" />
		<result column="g_reg_date" 	property="goodsRegDate" />
		
		<!-- 관계맵핑 1:1 association-->
		<association property="sellerInfo" javaType="Member">
			<!-- id태그는 조회시 테이블의 PK(기본키) JOIN 키(외래키) = 키(기본키)  -->
			<id 	column="m_id" 		property="memberId"/>
			<!-- result태그는 조회시 테이블의 일반컬럼 혹은 외래키 -->
			<result column="m_pw" 		property="memberPw"/>
			<result column="m_name" 	property="memberName"/>
			<result column="m_level" 	property="memberLevel"/>
			<result column="m_email" 	property="memberEmail"/>
			<result column="m_addr" 	property="memberAddr"/>
			<result column="m_reg_date" property="memberRegDate"/>
		</association>
	
	</resultMap>
	
	<resultMap type="Member" id="sellerResultMap">
		<!-- id태그는 조회시 테이블의 PK(기본키) -->
		<id 	column="m_id" 		property="memberId"/>
		<!-- result태그는 조회시 테이블의 일반컬럼 혹은 외래키 -->
		<result column="m_pw" 		property="memberPw"/>
		<result column="m_name" 	property="memberName"/>
		<result column="m_level" 	property="memberLevel"/>
		<result column="m_email" 	property="memberEmail"/>
		<result column="m_addr" 	property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
		
		<!-- 관계맵핑 1:N collection-->
		<collection property="goodsList" ofType="Goods">
			<id 	column="g_code" 		property="goodsCode" />
			<result column="g_name" 		property="goodsName" />
			<result column="g_price" 		property="goodsPrice" />
			<result column="g_seller_id" 	property="goodsSellerId" />
			<result column="g_reg_date" 	property="goodsRegDate" />
		</collection>
	</resultMap>
	
	<select id="getSellerList" resultMap="sellerResultMap">
		/* 판매자별 상품 목록 조회 */
		SELECT
			m.m_id,
			m.m_name,
			m.m_email,
			m.m_addr,
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_reg_date
		FROM
			tb_member AS m
			LEFT JOIN 
			tb_goods AS g
			ON 
			m.m_id = g.g_seller_id
		<where>
			<if test="memberLevel != null and memberLevel > 0">			
				m.m_level = #{memberLevel}
			</if>
			<if test="sellerId != null and sellerId != ''">			
				AND g.g_seller_Id = #{sellerId}
			</if>
		</where>
	</select>
	
	<delete id="removeGoodsByGoodsCode" parameterType="String">
		/* 상품코드별 상품삭제 */
		DELETE
		FROM
			tb_goods 
		WHERE
			g_code = #{goodsCode};
	</delete>

	<delete id="removeOrderByGoodsCode" parameterType="String">
		/* 상품코드별 주문이력삭제 */
		DELETE
			o
		FROM
			tb_goods as g
			INNER JOIN 
			tb_order as o
			ON 
			g.g_code = o.o_g_code
		WHERE
			g.g_code = #{goodsCode};
	</delete>
	
	<update id="modifyGoods" parameterType="Goods">
		/* 상품수정 */
		UPDATE tb_goods
		<set>
			<if test="goodsName != null and goodsName != ''">
				g_name = #{goodsName},
			</if>
			<if test="goodsPrice != null and goodsPrice != ''">
				g_price = #{goodsPrice},
			</if>
			<if test="goodsSellerId != null and goodsSellerId != ''">
				g_seller_id = #{goodsSellerId},
			</if>
		</set>
		WHERE 
			g_code = #{goodsCode};
	</update>
	
	<select id="getGoodsByCode" parameterType="String" resultMap="goodsResultMap">
		/* 상품조회 */
		SELECT
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_seller_id,
			g.g_reg_date
		FROM
			tb_goods AS g
		WHERE
			g.g_code = #{goodsCode};
	</select>
	
	
	<insert id="addGoods" parameterType="Goods">
		<selectKey resultType="String" keyColumn="newGoodsCode" keyProperty="goodsCode" order="BEFORE">
			/* 상품 자동 증가 코드 */
			<![CDATA[
			SELECT 
				CASE
				WHEN COUNT(*) = 0 THEN 'g001'
				WHEN CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED) < 999
				THEN CONCAT('g',LPAD(MAX(CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED))+1,3,'0'))	
				ELSE
					CONCAT('g',MAX(CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED))+1)	
				END AS newGoodsCode
			FROM 
				tb_goods
			]]>
		</selectKey>
		/* 상품 등록 */
		INSERT INTO tb_goods
			(g_code, g_name, g_price, g_seller_id, g_reg_date)
		VALUES 
			(#{goodsCode}, #{goodsName}, #{goodsPrice}, #{goodsSellerId}, CURDATE())
	</insert>
	
	<select id="getGoodsList" fetchSize="20" parameterType="map" resultMap="goodsResultMap">
		/* 상품목록 조회 */
		SELECT
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_seller_id,
			m.m_name,
			m.m_email,
			g.g_reg_date
		FROM
			tb_goods AS g
			INNER JOIN 
			tb_member AS m
			ON 
			g.g_seller_id = m.m_id
		<where>
			<if test="searchValue != null and searchValue != ''">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</where>
		ORDER BY g.g_code DESC;
	</select>
	
	<delete id="removeGoodsById" parameterType="String">
		/* 판매자별 상품 삭제 */
		DELETE
		FROM
			tb_goods
		WHERE 
			g_seller_id = #{sellerId};
	</delete>

	<delete id="removeOrderByGCode" parameterType="String">
		/* 판매자 등록한 상품코드별 주문이력 삭제 */
		DELETE
			o
		FROM
			tb_goods AS g
			INNER JOIN 
			tb_order AS o
			ON 
			g.g_code = o.o_g_code
		WHERE 
			g.g_seller_id = #{sellerId};
	</delete>
</mapper>